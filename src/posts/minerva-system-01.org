#+TITLE: O Sistema Minerva, parte 1
#+SETUPFILE: setupfile.org
#+LANGUAGE: pt_BR
#+STARTUP: inlineimages showall latexpreview
#+AUTHOR: Lucas S. Vieira
#+EMAIL: lucasvieira@protonmail.com
#+DATE: Ago 31, 2022

Estamos  em uma  época  de semi-pós-pandemia.  As pessoas  voltaram  a não  usar
máscara  na maioria  dos  lugares, a  vida  evoluiu  e, por  mais  que eu  tenha
atualizado bastante  meu último  post sobre  Plan 9  -- especialmente  porque eu
estive usando bastante o Plan 9 ultimamente --, esse blog continuou parado. Tudo
isso em meio a uma gigantesca  turbulência na minha vida pessoal e profissional;
acredito que, desde  o último post, eu  tenha começado a trabalhar  e trocado de
emprego.

Pois  bem, agora  que não  tenho medo  de mostrar  meu código  para os  outros e
receber críticas com relação a  ele (fruto da experiência profissional), resolvi
compartilhar  uma espécie  de /pet  project/  que venho  desenvolvendo há  algum
tempo, não me recordo de quanto.

Estou falando do *Minerva System*. Como o nome sugere, trata-se de um /sistema/;
mas não qualquer sistema. Trata-se de algo modelado para ser um ERP. Todavia, eu
sempre saliento que não tenho pretensão  comercial ALGUMA com relação a ele, por
dois motivos; o  primeiro é que não pretendo  me afundar no poço de  piche que é
construir e  manter um ERP,  o segundo é que  criei o mesmo  principalmente como
sendo uma espécie de projeto para estudo.

O  *Minerva  System*  foi  algo   que  criei  com  alguns  propósitos  meramente
tecnológicos em mente, que listo a seguir:

1. Usar  a linguagem Rust, sobretudo  porque tenho programado muito  em Rust nos
   últimos tempos.  Acredito que seja  bem robusta  e me sinto  relativamente em
   casa usando-a.
2. Estudar uma arquitetura de microsserviços.  E se você estiver aqui, talvez já
   tenha ouvido falar  de como é um inferno usar  microsserviços quando eles NÃO
   SÃO necessários,  tamanha a  complexidade desse  tipo de  coisa. Mas  eu quis
   usar também para experimentar com mais uma coisa; vai lendo aí.
3. Estudar Docker. Especialmente porque eu já tinha um conhecimento mão-na-massa
   de Docker, mas criar imagens para  vários serviços, usar um Docker Compose na
   prática pra subir serviços simultaneamente, poder garantir que isso vai rodar
   em qualquer lugar sem precisar disponibilizar um build específico ou instalar
   toolchain pra rodar... isso eu nunca tinha feito.
4. Estudar deploy em  ferramentas modernas. E aqui entra o  pulo do gato. Porque
   eu não apenas dei um jeito de estudar Docker Swarm (e aprender a usar Vagrant
   pra não  precisar usar Docker  Machine, que é  defasado), como também  dei um
   jeito  de  estudar Kubernetes.  De  fato,  chegou  um  momento que  tive  que
   desenterrar  um laptop  velho e  instalar Ubuntu  Server com  Kubernetes para
   brincar com isso.

Acho  que  esses   quatro  pontos  são  pouco  atrativos  para   a  maioria  dos
desenvolvedores que  estão iniciando -- e  pra ser bem honesto,  até para alguns
desenvolvedores que  não tem interesse  ou nunca  nem ouviram falar  de realizar
deploy de algo.

Mas eu estou me adiantando um bocado. Vamos continuar falando do Minerva.

* Estrutura do sistema

* bla

